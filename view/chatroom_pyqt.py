# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\85216\Desktop\Friend_Host\chatroom.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import socket
import sys, os
import threading
import time
from PyQt5 import QtCore, QtGui, QtWidgets
from view.stream_display_pyqt import Ui_Stream
from controller.message_encoder import message

class Ui_Chatroom(object):
    
    def __init__(self, username, ADDR):
        self.username = username
        self.ADDR = ADDR
        self.tcp_connection()
        #self.textBrowser.insertPlainText("You have entered the chat room\n"
        #self.initialize()
    
    def openStream(self):
        self.streamWindow = QtWidgets.QMainWindow()
        self.ui = Ui_Stream(self.username,self.ADDR[0],self.ADDR[1]+1)
        self.ui.setupUi(self.streamWindow)
        self.streamWindow.show()
    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(379, 571)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        
        #chatroom text
        self.gridLayout.setObjectName("gridLayout")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setObjectName("textBrowser")
        self.scrollbar = self.textBrowser.verticalScrollBar()
        
        
        #text entry
        self.gridLayout.addWidget(self.textBrowser, 0, 0, 1, 2)
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit.returnPressed.connect(self.sendText)
        
        #send button
        self.gridLayout.addWidget(self.lineEdit, 1, 0, 1, 2)
        self.send_Button = QtWidgets.QPushButton(self.centralwidget)
        self.send_Button.setObjectName("pushButton")
        self.send_Button.clicked.connect(self.sendText)
        
        #stream button
        self.gridLayout.addWidget(self.send_Button, 2, 0, 1, 1)
        self.stream_Button = QtWidgets.QPushButton(self.centralwidget)
        self.stream_Button.setObjectName("stream_Button")
        self.stream_Button.clicked.connect(self.openStream)

        self.gridLayout.addWidget(self.stream_Button, 2, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Chatroom"))
        self.send_Button.setText(_translate("MainWindow", "Send"))
        self.stream_Button.setText(_translate("MainWindow", "Stream"))


    def tcp_connection(self):   
        #First Socket: Dara receive tcp socket
        self.tcp_socket = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
        self.tcp_socket.connect(self.ADDR)
        #self.tcp_socket.send(b'first')
        #threading.Thread(target=self.initialize).start()
        m = bytes(self.username, 'utf-8')
        self.tcp_socket.send(m)

        #Second Socket: closing command transistion tcp socket
        # self.closing_tcp_socket =socket.socket(socket.AF_INET,socket.SOCK_STREAM)
        # self.closing_tcp_socket.connect((self.ADDR[0],self.ADDR[1] + 1))
        


    def sendText(self):
        m = message()
        mes = m.encode(self.username,self.lineEdit.text())
        #mes = bytes(self.text_entry.get(), 'utf-8')
        try:
            self.tcp_socket.send(mes)
            print("Message Sent")
        except:
            print("Failed to send message")
        #auto scroll when text is full
        self.is_text_full = self.scrollbar.maximum() - self.scrollbar.value() <= 10
        
        self.textBrowser.insertPlainText(self.username + " : " + self.lineEdit.text() + "\n")
        if self.is_text_full:
            self.scrollbar.setValue(self.scrollbar.maximum())
        self.lineEdit.clear()

     
    def update_chat_room(self):
        #self.textBrowser.insertPlainText("You have entered the chat room\n")
        #TODO: 
        while True: 
            #print("1")
            
            mes = self.tcp_socket.recv(4096)
            
            if(mes == b''):
                break
            m = message()
            m.decode(mes)

            if(m.get_username() == "server"):
                code = m.get_message().split(' ',1)
                if(code[0] == 2):
                    threading.Thread(target = self.stream_room).start()
                    self.textBrowser.insertPlainText(code[1] + "\n")
                elif(code[0] == 3):
                    self.textBrowser.insertPlainText(code[1] + "\n")
                else:
                    self.textBrowser.insertPlainText(m.get_message() + "\n")
            else:
                #s = mes.decode("utf-8")
                print("update chat")
                self.textBrowser.insertPlainText(m.get_username() + " : " + m.get_message() + "\n")
                self.lineEdit.clear()
            
        
        try:
            self.tcp_socket.close()
            print("finished")
        except:
            print("Failed to close the tcp socket.")
        print("done")


    #Initialization of all the functionalities. 
    def initialize(self): 
        #Initialize a thread to wait for messages from other clients.
        self.stop_thread = False
        self.updateThread = threading.Thread(target=self.update_chat_room)
        self.updateThread.start()
        #self.updateThread.start()
        #self.updateThread.set()

    def stream_room(self):
        self.stream = Ui_Stream(self.username,self.ADDR[0],self.ADDR[1]+1)



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_Chatroom()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
